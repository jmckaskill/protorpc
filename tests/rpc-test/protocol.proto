syntax = "proto3";

package rpc.example;
option go_package = "rpc/pb";

enum TestEnum {
    ENUM_A = 0;
    ENUM_B = 1;
    ENUM_C = 2;
}


message TestRequest {
    bool b = 1;
    uint32 u32 = 5;
    uint64 u64 = 10;
    int32 i32 = 2;
    int64 i64 = 7;
    sint32 s32 = 3;
    sint64 s64 = 9;
    fixed32 f32 = 6;
    fixed64 f64 = 11;
    sfixed32 sf32 = 4;
    sfixed64 sf64 = 8;
    float f = 12;
    double d = 13;
    bytes by = 14;
    string str = 15;
    TestEnum en = 16;
    TestRequest msg = 17;
    TestPod pod = 18;
    repeated bool rb = 21;
    repeated uint32 ru32 = 25;
    repeated uint64 ru64 = 210;
    repeated int32 ri32 = 22;
    repeated int64 ri64 = 27;
    repeated sint32 rs32 = 23;
    repeated sint64 rs64 = 29;
    repeated fixed32 rf32 = 26;
    repeated fixed64 rf64 = 211;
    repeated sfixed32 rsf32 = 24;
    repeated sfixed64 rsf64 = 28;
    repeated float rf = 212;
    repeated double rd = 213;
    repeated bytes rby = 214;
    repeated string rstr = 215;
    repeated TestEnum ren = 216;
    repeated TestRequest rmsg = 217;
    repeated TestPod rpod = 218;
    
    map<uint32, bool> mb = 221;
    map<uint32, uint32> mu32 = 225;
    map<uint32, uint64> mu64 = 2210;
    map<uint32, int32> mi32 = 222;
    map<uint32, int64> mi64 = 227;
    map<uint32, sint32> ms32 = 223;
    map<uint32, sint64> ms64 = 229;
    map<uint32, fixed32> mf32 = 226;
    map<uint32, fixed64> mf64 = 2211;
    map<uint32, sfixed32> msf32 = 224;
    map<uint32, sfixed64> msf64 = 228;
    map<uint32, float> mf = 2212;
    map<uint32, double> md = 2213;
    map<uint32, bytes> mby = 2214;
    map<uint32, string> mstr = 2215;
    map<uint32, TestEnum> men = 2216;
    map<uint32, TestRequest> mmsg = 2217;
    map<uint32, TestPod> mpod = 2218;
}

message TestPod {
    oneof foo {
        uint32 u = 1;
        int32 i = 2;
    }
}

message LoginRequest {
    string username = 1;
    string password = 2;
    LoginReply expected = 3;
}

message LoginReply {
    bytes token = 1;
    LoginRequest request = 2;
    repeated uint32 numbers = 3;
}

message LookupDesignRequest {
    double northing = 1;
    double easting = 2;
}

message LookupDesignReply {
    double elevation = 1;
}

service TestService {
    rpc Test (TestRequest) returns (TestRequest);
    rpc Login (LoginRequest) returns (LoginReply);
    rpc LookupDesign (LookupDesignRequest) returns (LookupDesignReply);
    rpc LookupStream (LookupDesignRequest) returns (stream LookupDesignReply);
    //rpc LookupDesignIn (stream LookupDesignRequest) returns (LookupDesignReply);
    //rpc LookupDesignOut (LookupDesignRequest) returns (stream LookupDesignReply);
    //rpc LookupDesignBi (stream LookupDesignRequest) returns (stream LookupDesignReply);
}
